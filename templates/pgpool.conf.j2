# ----------------------------
# pgPool-II configuration file
# ----------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# Whitespace may be used.  Comments are introduced with "#" anywhere on a line.
# The complete list of parameter names and allowed values can be found in the
# pgPool-II documentation.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, or use "pgpool reload".  Some
# parameters, which are marked below, require a server shutdown and restart to
# take effect.
#


#------------------------------------------------------------------------------
# CONNECTIONS
#------------------------------------------------------------------------------

# - pgpool Connection Settings -

listen_addresses = '{{ pgpool_listen_addresses }}'
                                   # Host name or IP address to listen on:
                                   # '*' for all, '' for no TCP/IP connections
                                   # (change requires restart)
port = {{ pgpool_port }}
                                   # Port number
                                   # (change requires restart)
socket_dir = '{{ pgpool_socket_dir }}'
                                   # Unix domain socket path
                                   # The Debian package defaults to
                                   # /var/run/postgresql
                                   # (change requires restart)
listen_backlog_multiplier = {{ pgpool_listen_backlog_multiplier }}
                                   # Set the backlog parameter of listen(2) to
                                   # num_init_children * listen_backlog_multiplier.
                                   # (change requires restart)
serialize_accept = {{ pgpool_serialize_accept }}
                                   # whether to serialize accept() call to avoid thundering herd problem
                                   # (change requires restart)
reserved_connections = {{ pgpool_reserved_connections }}
                                   # Number of reserved connections.
                                   # Pgpool-II does not accept connections if over
                                   # num_init_chidlren - reserved_connections.

# - pgpool Communication Manager Connection Settings -

pcp_listen_addresses = '{{ pgpool_pcp_listen_addresses }}'
                                   # Host name or IP address for pcp process to listen on:
                                   # '*' for all, '' for no TCP/IP connections
                                   # (change requires restart)
pcp_port = {{ pgpool_pcp_port }}
                                   # Port number for pcp
                                   # (change requires restart)
pcp_socket_dir = '{{ pgpool_pcp_socket_dir }}'
                                   # Unix domain socket path for pcp
                                   # The Debian package defaults to
                                   # /var/run/postgresql
                                   # (change requires restart)

# - Backend Connection Settings -

{% for server in pgpool_backend_servers %}
backend_hostname{{ loop.index0 }} = '{{ server.hostname }}'
backend_port{{ loop.index0 }} = {{ server.port }}
backend_weight{{ loop.index0 }} = {{ server.weight }}
backend_data_directory{{ loop.index0 }} = '{{ server.data_directory }}'
backend_flag{{ loop.index0 }} = '{{ server.flag }}'
backend_application_name{{ loop.index0 }} = '{{ server.application_name }}'
{% endfor %}

#backend_hostname0 = 'localhost'
                                   # Host name or IP address to connect to for backend 0
#backend_port0 = 5432
                                   # Port number for backend 0
#backend_weight0 = 1
                                   # Weight for backend 0 (only in load balancing mode)
#backend_data_directory0 = '/var/lib/pgsql/data'
                                   # Data directory for backend 0
#backend_flag0 = 'ALLOW_TO_FAILOVER'
                                   # Controls various backend behavior
                                   # ALLOW_TO_FAILOVER, DISALLOW_TO_FAILOVER
                                   # or ALWAYS_PRIMARY
#backend_application_name0 = 'server0'
                                   # walsender's application_name, used for "show pool_nodes" command


# - Authentication -

enable_pool_hba = {{ pgpool_enable_pool_hba | ternary('on', 'off') }}
                                   # Use pool_hba.conf for client authentication
pool_passwd = '{{ pgpool_pool_passwd }}'
                                   # File name of pool_passwd for md5 authentication.
                                   # "" disables pool_passwd.
                                   # (change requires restart)
authentication_timeout = {{ pgpool_authentication_timeout }}
                                   # Delay in seconds to complete client authentication
                                   # 0 means no timeout.

allow_clear_text_frontend_auth = {{ pgpool_allow_clear_text_frontend_auth }}
                                   # Allow Pgpool-II to use clear text password authentication
                                   # with clients, when pool_passwd does not
                                   # contain the user password


# - SSL Connections -

ssl = {{ pgpool_ssl | ternary('on', 'off') }}
                                   # Enable SSL support
                                   # (change requires restart)
{{ '#' if not pgpool_ssl }}ssl_key = '{{ pgpool_ssl_key }}'
                                   # Path to the SSL private key file
                                   # (change requires restart)
{{ '#' if not pgpool_ssl }}ssl_cert = '{{ pgpool_ssl_cert }}'
                                   # Path to the SSL public certificate file
                                   # (change requires restart)
{{ '#' if not pgpool_ssl }}ssl_ca_cert = '{{ pgpool_ssl_ca_cert }}'
                                   # Path to a single PEM format file
                                   # containing CA root certificate(s)
                                   # (change requires restart)
{{ '#' if not pgpool_ssl }}ssl_ca_cert_dir = '{{ pgpool_ssl_ca_cert_dir }}'
                                   # Directory containing CA root certificate(s)
                                   # (change requires restart)

ssl_ciphers = '{{ pgpool_ssl_ciphers }}'
                                   # Allowed SSL ciphers
                                   # (change requires restart)
ssl_prefer_server_ciphers = {{ pgpool_ssl_prefer_server_ciphers }}
                                   # Use server's SSL cipher preferences,
                                   # rather than the client's
                                   # (change requires restart)
ssl_ecdh_curve = 'prime256v1'
                                   # Name of the curve to use in ECDH key exchange
ssl_dh_params_file = ''
                                   # Name of the file containing Diffie-Hellman parameters used
                                   # for so-called ephemeral DH family of SSL cipher.

#------------------------------------------------------------------------------
# POOLS
#------------------------------------------------------------------------------

# - Concurrent session and pool size -

num_init_children = {{ pgpool_num_init_children }}
                                   # Number of concurrent sessions allowed
                                   # (change requires restart)
max_pool = {{ pgpool_max_pool }}
                                   # Number of connection pool caches per connection
                                   # (change requires restart)

# - Life time -

child_life_time = {{ pgpool_child_life_time }}
                                   # Pool exits after being idle for this many seconds
child_max_connections = {{ pgpool_child_max_connections }}
                                   # Pool exits after receiving that many connections
                                   # 0 means no exit
connection_life_time = {{ pgpool_connection_life_time }}
                                   # Connection to backend closes after being idle for this many seconds
                                   # 0 means no close
client_idle_limit = {{ pgpool_client_idle_limit }}
                                   # Client is disconnected after being idle for that many seconds
                                   # (even inside an explicit transactions!)
                                   # 0 means no disconnection


#------------------------------------------------------------------------------
# LOGS
#------------------------------------------------------------------------------

# - Where to log -

log_destination = '{{ pgpool_log_destination }}'
                                   # Where to log
                                   # Valid values are combinations of stderr,
                                   # and syslog. Default to stderr.

# - What to log -

log_line_prefix = '%t: pid %p: '   # printf-style string to output at beginning of each log line.

log_connections = {{ pgpool_log_connections }}
                                   # Log connections
log_hostname = {{ pgpool_log_hostname }}
                                   # Hostname will be shown in ps status
                                   # and in logs if connections are logged
log_statement = {{ pgpool_log_statement }}
                                   # Log all statements
log_per_node_statement = {{ pgpool_log_per_node_statement }}
                                   # Log all statements
                                   # with node and backend informations
log_client_messages = {{ pgpool_log_client_messages }}
                                   # Log any client messages
log_standby_delay = '{{ pgpool_log_standby_delay }}'
                                   # Log standby delay
                                   # Valid values are combinations of always,
                                   # if_over_threshold, none

# - Syslog specific -

syslog_facility = '{{ pgpool_syslog_facility }}'
                                   # Syslog local facility. Default to LOCAL0
syslog_ident = '{{ pgpool_syslog_ident }}'
                                   # Syslog program identification string
                                   # Default to 'pgpool'

# - Debug -

log_error_verbosity = {{ pgpool_log_error_verbosity }}          # terse, default, or verbose messages

client_min_messages = {{ pgpool_client_min_messages }}            
                                    # values in order of decreasing detail:
                                    #   debug5
                                    #   debug4
                                    #   debug3
                                    #   debug2
                                    #   debug1
                                    #   log
                                    #   notice
                                    #   warning
                                    #   error

log_min_messages = {{ pgpool_log_min_messages }}
                                    # values in order of decreasing detail:
                                    #   debug5
                                    #   debug4
                                    #   debug3
                                    #   debug2
                                    #   debug1
                                    #   info
                                    #   notice
                                    #   warning
                                    #   error
                                    #   log
                                    #   fatal
                                    #   panic

#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

pid_file_name = '{{ pgpool_pid_file_name }}'
                                   # PID file name
                                   # Can be specified as relative to the"
                                   # location of pgpool.conf file or
                                   # as an absolute path
                                   # (change requires restart)
logdir = '{{ pgpool_logdir }}'
                                   # Directory of pgPool status file
                                   # (change requires restart)


#------------------------------------------------------------------------------
# CONNECTION POOLING
#------------------------------------------------------------------------------

connection_cache = {{ pgpool_connection_cache }}
                                   # Activate connection pools
                                   # (change requires restart)

                                   # Semicolon separated list of queries
                                   # to be issued at the end of a session
                                   # The default is for 8.3 and later
reset_query_list = '{{ pgpool_reset_query_list }}'
                                   # The following one is for 8.2 and before
#reset_query_list = 'ABORT; RESET ALL; SET SESSION AUTHORIZATION DEFAULT'


#------------------------------------------------------------------------------
# REPLICATION MODE
#------------------------------------------------------------------------------

backend_clustering_mode = {{ pgpool_backend_clustering_mode }}
                                   # Activate replication mode
                                   # (change requires restart)
replicate_select = {{ pgpool_replicate_select }}
                                   # Replicate SELECT statements
                                   # when in replication mode
                                   # replicate_select is higher priority than
                                   # load_balance_mode.

insert_lock = {{ pgpool_insert_lock }}
                                   # Automatically locks a dummy row or a table
                                   # with INSERT statements to keep SERIAL data
                                   # consistency
                                   # Without SERIAL, no lock will be issued
lobj_lock_table = {{ pgpool_lobj_lock_table }}
                                   # When rewriting lo_creat command in
                                   # replication mode, specify table name to
                                   # lock

# - Degenerate handling -

replication_stop_on_mismatch = {{ pgpool_replication_stop_on_mismatch }}
                                   # On disagreement with the packet kind
                                   # sent from backend, degenerate the node
                                   # which is most likely "minority"
                                   # If off, just force to exit this session

failover_if_affected_tuples_mismatch = {{ pgpool_failover_if_affected_tuples_mismatch }}
                                   # On disagreement with the number of affected
                                   # tuples in UPDATE/DELETE queries, then
                                   # degenerate the node which is most likely
                                   # "minority".
                                   # If off, just abort the transaction to
                                   # keep the consistency


#------------------------------------------------------------------------------
# LOAD BALANCING MODE
#------------------------------------------------------------------------------

load_balance_mode = {{ pgpool_load_balance_mode }}
                                   # Activate load balancing mode
                                   # (change requires restart)
ignore_leading_white_space = {{ pgpool_ignore_leading_white_space }}
                                   # Ignore leading white spaces of each query
read_only_function_list = '{{ pgpool_read_only_function_list }}'
                                   # Comma separated list of function names
                                   # that don't write to database
                                   # Regexp are accepted
write_function_list = '{{ pgpool_write_function_list }}'
                                   # Comma separated list of function names
                                   # that write to database
                                   # Regexp are accepted

database_redirect_preference_list = '{{ pgpool_database_redirect_preference_list }}'
                                   # comma separated list of pairs of database and node id.
                                   # example: postgres:primary,mydb[0-4]:1,mydb[5-9]:2'
                                   # valid for streaming replicaton mode only.
app_name_redirect_preference_list = '{{ pgpool_app_name_redirect_preference_list }}'
                                   # comma separated list of pairs of app name and node id.
                                   # example: 'psql:primary,myapp[0-4]:1,myapp[5-9]:standby'
                                   # valid for streaming replicaton mode only.
allow_sql_comments = {{ pgpool_allow_sql_comments }}
                                   # if on, ignore SQL comments when judging if load balance or
                                   # query cache is possible.
                                   # If off, SQL comments effectively prevent the judgment
                                   # (pre 3.4 behavior).

disable_load_balance_on_write = '{{ pgpool_disable_load_balance_on_write }}'
                                   # Load balance behavior when write query is issued
                                   # in an explicit transaction.
                                   # Note that any query not in an explicit transaction
                                   # is not affected by the parameter.
                                   # 'transaction' (the default): if a write query is issued,
                                   # subsequent read queries will not be load balanced
                                   # until the transaction ends.
                                   # 'trans_transaction': if a write query is issued,
                                   # subsequent read queries in an explicit transaction
                                   # will not be load balanced until the session ends.
                                   # 'always': if a write query is issued, read queries will
                                   # not be load balanced until the session ends.

statement_level_load_balance = {{ pgpool_statement_level_load_balance }}
                                   # Enables statement level load balancing

#------------------------------------------------------------------------------
# MASTER/SLAVE MODE
#------------------------------------------------------------------------------
# https://www.pgpool.net/docs/latest/en/html/runtime-streaming-replication-check.html 

backend_clustering_mode = {{ pgpool_backend_clustering_mode }}
                                   # Activate master/slave mode
                                   # (change requires restart)
backend_clustering_mode = '{{ pgpool_backend_clustering_mode }}'
                                   # Master/slave sub mode
                                   # Valid values are combinations stream, slony
                                   # or logical. Default is stream.
                                   # (change requires restart)

# - Streaming -

sr_check_period = {{ pgpool_sr_check_period }}
                                   # Streaming replication check period
                                   # Disabled (0) by default
sr_check_user = '{{ pgpool_sr_check_user }}'
                                   # Streaming replication check user
                                   # This is necessary even if you disable
                                   # streaming replication delay check with
                                   # sr_check_period = 0

sr_check_password = '{{ pgpool_sr_check_password }}'
                                   # Password for streaming replication check user.
                                   # Leaving it empty will make Pgpool-II to first look for the
                                   # Password in pool_passwd file before using the empty password

sr_check_database = '{{ pgpool_sr_check_database }}'
                                   # Database name for streaming replication check
delay_threshold = {{ pgpool_delay_threshold }}
                                   # Threshold before not dispatching query to standby node
                                   # Unit is in bytes
                                   # Disabled (0) by default

# - Special commands -

follow_primary_command = '{{ pgpool_follow_primary_command }}'
                                   # Executes this command after master failover
                                   # Special values:
                                   #   %d = failed node id
                                   #   %h = failed node host name
                                   #   %p = failed node port number
                                   #   %D = failed node database cluster path
                                   #   %m = new master node id
                                   #   %H = new master node hostname
                                   #   %M = old master node id
                                   #   %P = old primary node id
                                   #   %r = new master port number
                                   #   %R = new master database cluster path
                                   #   %N = old primary node hostname
                                   #   %S = old primary node port number
                                   #   %% = '%' character

#------------------------------------------------------------------------------
# HEALTH CHECK GLOBAL PARAMETERS
#------------------------------------------------------------------------------

health_check_period = {{ pgpool_health_check_period }}
                                   # Health check period
                                   # Disabled (0) by default
health_check_timeout = {{ pgpool_health_check_timeout }}
                                   # Health check timeout
                                   # 0 means no timeout
health_check_user = '{{ pgpool_health_check_user }}'
                                   # Health check user
health_check_password = '{{ pgpool_health_check_password }}'
                                   # Password for health check user
                                   # Leaving it empty will make Pgpool-II to first look for the
                                   # Password in pool_passwd file before using the empty password

health_check_database = '{{ pgpool_health_check_database }}'
                                   # Database name for health check. If '', tries 'postgres' frist, then 'template1'

health_check_max_retries = {{ pgpool_health_check_max_retries }}
                                   # Maximum number of times to retry a failed health check before giving up.
health_check_retry_delay = {{ pgpool_health_check_retry_delay }}
                                   # Amount of time to wait (in seconds) between retries.
connect_timeout = {{ pgpool_connect_timeout }}
                                   # Timeout value in milliseconds before giving up to connect to backend.
                                   # Default is 10000 ms (10 second). Flaky network user may want to increase
                                   # the value. 0 means no timeout.
                                   # Note that this value is not only used for health check,
                                   # but also for ordinary conection to backend.

#------------------------------------------------------------------------------
# HEALTH CHECK PER NODE PARAMETERS (OPTIONAL)
#------------------------------------------------------------------------------
#health_check_period0 = 0
#health_check_timeout0 = 20
#health_check_user0 = 'nobody'
#health_check_password0 = ''
#health_check_database0 = ''
#health_check_max_retries0 = 0
#health_check_retry_delay0 = 1
#connect_timeout0 = 10000

#------------------------------------------------------------------------------
# FAILOVER AND FAILBACK
#------------------------------------------------------------------------------

failover_command = '{{ pgpool_failover_command }}'
                                   # Executes this command at failover
                                   # Special values:
                                   #   %d = failed node id
                                   #   %h = failed node host name
                                   #   %p = failed node port number
                                   #   %D = failed node database cluster path
                                   #   %m = new master node id
                                   #   %H = new master node hostname
                                   #   %M = old master node id
                                   #   %P = old primary node id
                                   #   %r = new master port number
                                   #   %R = new master database cluster path
                                   #   %N = old primary node hostname
                                   #   %S = old primary node port number
                                   #   %% = '%' character
failback_command = '{{ pgpool_failback_command }}'
                                   # Executes this command at failback.
                                   # Special values:
                                   #   %d = failed node id
                                   #   %h = failed node host name
                                   #   %p = failed node port number
                                   #   %D = failed node database cluster path
                                   #   %m = new master node id
                                   #   %H = new master node hostname
                                   #   %M = old master node id
                                   #   %P = old primary node id
                                   #   %r = new master port number
                                   #   %R = new master database cluster path
                                   #   %N = old primary node hostname
                                   #   %S = old primary node port number
                                   #   %% = '%' character

failover_on_backend_error = {{ pgpool_failover_on_backend_error }}
                                   # Initiates failover when reading/writing to the
                                   # backend communication socket fails
                                   # If set to off, pgpool will report an
                                   # error and disconnect the session.

detach_false_primary = {{ pgpool_detach_false_primary }}
                                   # Detach false primary if on. Only
                                   # valid in streaming replicaton
                                   # mode and with PostgreSQL 9.6 or
                                   # after.

search_primary_node_timeout = {{ pgpool_search_primary_node_timeout }}
                                   # Timeout in seconds to search for the
                                   # primary node when a failover occurs.
                                   # 0 means no timeout, keep searching
                                   # for a primary node forever.

auto_failback = {{ pgpool_auto_failback }}
                                   # Dettached backend node reattach automatically
                                   # if replication_state is 'streaming'.
auto_failback_interval = {{ pgpool_auto_failback_interval }}
                                   # Min interval of executing auto_failback in
                                   # seconds.

#------------------------------------------------------------------------------
# ONLINE RECOVERY
#------------------------------------------------------------------------------

recovery_user = '{{ pgpool_recovery_user }}'
                                   # Online recovery user
recovery_password = '{{ pgpool_recovery_password }}'
                                   # Online recovery password
                                   # Leaving it empty will make Pgpool-II to first look for the
                                   # Password in pool_passwd file before using the empty password

recovery_1st_stage_command = '{{ pgpool_recovery_1st_stage_command }}'
                                   # Executes a command in first stage
recovery_2nd_stage_command = '{{ pgpool_recovery_2nd_stage_command }}'
                                   # Executes a command in second stage
recovery_timeout = {{ pgpool_recovery_timeout }}
                                   # Timeout in seconds to wait for the
                                   # recovering node's postmaster to start up
                                   # 0 means no wait
client_idle_limit_in_recovery = {{ pgpool_client_idle_limit_in_recovery }}
                                   # Client is disconnected after being idle
                                   # for that many seconds in the second stage
                                   # of online recovery
                                   # 0 means no disconnection
                                   # -1 means immediate disconnection


#------------------------------------------------------------------------------
# WATCHDOG
#------------------------------------------------------------------------------

# - Enabling -

use_watchdog = {{ pgpool_use_watchdog }}
                                    # Activates watchdog
                                    # (change requires restart)

# - Connection to up stream servers -

trusted_servers = '{{ pgpool_trusted_servers }}'
                                    # trusted server list which are used
                                    # to confirm network connection
                                    # (hostA,hostB,hostC,...)
                                    # (change requires restart)
ping_path = '{{ ppgool_ping_path }}'
                                    # ping command path
                                    # (change requires restart)

# - Watchdog communication Settings -

hostname0 = '{{ pgpool_hostname }}'
                                    # Host name or IP address of this watchdog
                                    # (change requires restart)
wd_port0 = {{ pgpool_wd_port }}
                                    # port number for watchdog service
                                    # (change requires restart)
wd_priority = {{ pgpool_wd_priority }}
                                    # priority of this watchdog in leader election
                                    # (change requires restart)

wd_authkey = '{{ pgpool_authkey }}'
                                    # Authentication key for watchdog communication
                                    # (change requires restart)

wd_ipc_socket_dir = '{{ pgpool_wd_ipc_socket_dir }}'
                                    # Unix domain socket path for watchdog IPC socket
                                    # The Debian package defaults to
                                    # /var/run/postgresql
                                    # (change requires restart)


# - Virtual IP control Setting -

delegate_IP = '{{ pgpool_delegate_IP }}'
                                    # delegate IP address
                                    # If this is empty, virtual IP never bring up.
                                    # (change requires restart)
if_cmd_path = '{{ pgpool_if_cmd_path }}'
                                    # path to the directory where if_up/down_cmd exists
                                    # If if_up/down_cmd starts with "/", if_cmd_path will be ignored.
                                    # (change requires restart)
if_up_cmd = '{{ pgpool_if_up_cmd }}'
                                    # startup delegate IP command
                                    # (change requires restart)
if_down_cmd = '{{ pgpool_if_down_cmd }}'
                                    # shutdown delegate IP command
                                    # (change requires restart)
arping_path = '{{ pgpool_arping_path }}'
                                    # arping command path
                                    # If arping_cmd starts with "/", if_cmd_path will be ignored.
                                    # (change requires restart)
arping_cmd = '{{ pgpool_arping_cmd }}'
                                    # arping command
                                    # (change requires restart)

# - Behavior on escalation Setting -

clear_memqcache_on_escalation = {{ pgpool_clear_memqcache_on_escalation }}
                                    # Clear all the query cache on shared memory
                                    # when standby pgpool escalate to active pgpool
                                    # (= virtual IP holder).
                                    # This should be off if client connects to pgpool
                                    # not using virtual IP.
                                    # (change requires restart)
wd_escalation_command = '{{ pgpool_wd_escalation_command }}'
                                    # Executes this command at escalation on new active pgpool.
                                    # (change requires restart)
wd_de_escalation_command = '{{ pgpool_wd_de_escalation_command }}'
                                    # Executes this command when master pgpool resigns from being master.
                                    # (change requires restart)

# - Watchdog consensus settings for failover -

failover_when_quorum_exists = {{ pgpool_failover_when_quorum_exists }}
                                    # Only perform backend node failover
                                    # when the watchdog cluster holds the quorum
                                    # (change requires restart)

failover_require_consensus = {{ pgpool_failover_require_consensus }}
                                    # Perform failover when majority of Pgpool-II nodes
                                    # aggrees on the backend node status change
                                    # (change requires restart)

allow_multiple_failover_requests_from_node = {{ pgpool_allow_multiple_failover_requests_from_node }}
                                    # A Pgpool-II node can cast multiple votes
                                    # for building the consensus on failover
                                    # (change requires restart)

enable_consensus_with_half_votes = {{ pgpool_enable_consensus_with_half_votes }}
                                    # apply majority rule for consensus and quorum computation
                                    # at 50% of votes in a cluster with even number of nodes.
                                    # when enabled the existence of quorum and consensus
                                    # on failover is resolved after receiving half of the
                                    # total votes in the cluster, otherwise both these
                                    # decisions require at least one more vote than
                                    # half of the total votes.
                                    # (change requires restart)

# - Lifecheck Setting -

# -- common --

wd_monitoring_interfaces_list = '{{ pgpool_wd_monitoring_interfaces_list }}'  # Comma separated list of interfaces names to monitor.
                                    # if any interface from the list is active the watchdog will
                                    # consider the network is fine
                                    # 'any' to enable monitoring on all interfaces except loopback
                                    # '' to disable monitoring
                                    # (change requires restart)


wd_lifecheck_method = '{{ pgpool_wd_lifecheck_method }}'
                                    # Method of watchdog lifecheck ('heartbeat' or 'query' or 'external')
                                    # (change requires restart)
wd_interval = {{ pgpool_wd_interval }}
                                    # lifecheck interval (sec) > 0
                                    # (change requires restart)

# -- heartbeat mode --

heartbeat_port0 = {{ pgpool_wd_heartbeat_port }}
                                    # Port number for receiving heartbeat signal
                                    # (change requires restart)
wd_heartbeat_keepalive = {{ pgpool_wd_heartbeat_keepalive }}
                                    # Interval time of sending heartbeat signal (sec)
                                    # (change requires restart)
wd_heartbeat_deadtime = {{ pgpool_wd_heartbeat_deadtime }}
                                    # Deadtime interval for heartbeat signal (sec)
                                    # (change requires restart)

{% if pgpool_heartbeat_destination | length > 0 %}
{% for server in pgpool_heartbeat_destination %}
heartbeat_hostname{{ loop.index0 }} = '{{ server.hostname | mandatory }}'
heartbeat_port{{ loop.index0 }} = '{{ server.port | default(pgpool_wd_heartbeat_port) }}'
heartbeat_device{{ loop.index0 }} = '{{ server.device | default('') }}'
{% endfor %}
{% endif %}

#heartbeat_hostname0 = 'host0_ip1'
                                    # Host name or IP address of destination 0
                                    # for sending heartbeat signal.
                                    # (change requires restart)
#heartbeat_port0 = 9694 
                                    # Port number of destination 0 for sending
                                    # heartbeat signal. Usually this is the
                                    # same as heartbeat_port0.
                                    # (change requires restart)
#heartbeat_device0 = ''
                                    # Name of NIC device (such like 'eth0')
                                    # used for sending/receiving heartbeat
                                    # signal to/from destination 0.
                                    # This works only when this is not empty
                                    # and pgpool has root privilege.
                                    # (change requires restart)


# -- query mode --

wd_life_point = {{ pgpool_wd_life_point }}
                                    # lifecheck retry times
                                    # (change requires restart)
wd_lifecheck_query = '{{ pgpool_wd_lifecheck_query }}'
                                    # lifecheck query to pgpool from watchdog
                                    # (change requires restart)
wd_lifecheck_dbname = '{{ pgpool_wd_lifecheck_dbname }}'
                                    # Database name connected for lifecheck
                                    # (change requires restart)
wd_lifecheck_user = '{{ pgpool_wd_lifecheck_user }}'
                                    # watchdog user monitoring pgpools in lifecheck
                                    # (change requires restart)
wd_lifecheck_password = '{{ pgpool_wd_lifecheck_password }}'
                                    # Password for watchdog user in lifecheck
                                    # Leaving it empty will make Pgpool-II to first look for the
                                    # Password in pool_passwd file before using the empty password
                                    # (change requires restart)

# - Other pgpool Connection Settings -

{% if pgpool_other_settings | length > 0 %}
{% for server in pgpool_other_settings %}
hostname{{ loop.index0 }} = {{ server.hostname | mandatory }}
pgpool_port{{ loop.index0 }} = {{ server.port | default(pgpool_port) }}
wd_port{{ loop.index0 }} = {{ server.wd_port | default(pgpool_wd_port) }}
{% endfor %}
{% endif %}

#other_pgpool_hostname = 'host0'
                                    # Host name or IP address to connect to for other pgpool 0
                                    # (change requires restart)
#other_pgpool_port0 = 5432
                                    # Port number for other pgpool 0
                                    # (change requires restart)
#other_wd_port0 = 9000
                                    # Port number for other watchdog 0
                                    # (change requires restart)



#------------------------------------------------------------------------------
# OTHERS
#------------------------------------------------------------------------------
relcache_expire = {{ pgpool_relcache_expire }}
                                   # Life time of relation cache in seconds.
                                   # 0 means no cache expiration(the default).
                                   # The relation cache is used for cache the
                                   # query result against PostgreSQL system
                                   # catalog to obtain various information
                                   # including table structures or if it's a
                                   # temporary table or not. The cache is
                                   # maintained in a pgpool child local memory
                                   # and being kept as long as it survives.
                                   # If someone modify the table by using
                                   # ALTER TABLE or some such, the relcache is
                                   # not consistent anymore.
                                   # For this purpose, cache_expiration
                                   # controls the life time of the cache.

relcache_size = {{ pgpool_relcache_size }}
                                   # Number of relation cache
                                   # entry. If you see frequently:
                                   # "pool_search_relcache: cache replacement happend"
                                   # in the pgpool log, you might want to increate this number.

check_temp_table = {{ pgpool_check_temp_table }}
                                   # Temporary table check method. catalog, trace or none.
                                   # Default is catalog.

check_unlogged_table = {{ pgpool_check_unlogged_table }}
                                   # If on, enable unlogged table check in SELECT statements.
                                   # This initiates queries against system catalog of primary/master
                                   # thus increases load of master.
                                   # If you are absolutely sure that your system never uses unlogged tables
                                   # and you want to save access to primary/master, you could turn this off.
                                   # Default is on.
enable_shared_relcache = {{ pgpool_enable_shared_relcache }}
                                   # If on, relation cache stored in memory cache,
                                   # the cache is shared among child process.
                                   # Default is on.
                                   # (change requires restart)

relcache_query_target = {{ pgpool_relcache_query_target }} 
                                   # Target node to send relcache queries. Default is master (primary) node.
                                   # If load_balance_node is specified, queries will be sent to load balance node.
#------------------------------------------------------------------------------
# IN MEMORY QUERY MEMORY CACHE
#------------------------------------------------------------------------------
memory_cache_enabled = {{ pgpool_in_memory_query_cache }}
                                   # If on, use the memory cache functionality, off by default
                                   # (change requires restart)
memqcache_method = '{{ pgpool_memqcache_method }}'
                                   # Cache storage method. either 'shmem'(shared memory) or
                                   # 'memcached'. 'shmem' by default
                                   # (change requires restart)
memqcache_memcached_host = '{{ pgpool_memqcache_memcached_host }}'
                                   # Memcached host name or IP address. Mandatory if
                                   # memqcache_method = 'memcached'.
                                   # Defaults to localhost.
                                   # (change requires restart)
memqcache_memcached_port = {{ pgpool_memqcache_memcached_port }}
                                   # Memcached port number. Mondatory if memqcache_method = 'memcached'.
                                   # Defaults to 11211.
                                   # (change requires restart)
memqcache_total_size = {{ pgpool_memqcache_total_size }}
                                   # Total memory size in bytes for storing memory cache.
                                   # Mandatory if memqcache_method = 'shmem'.
                                   # Defaults to 64MB.
                                   # (change requires restart)
memqcache_max_num_cache = {{ pgpool_memqcache_max_num_cache }}
                                   # Total number of cache entries. Mandatory
                                   # if memqcache_method = 'shmem'.
                                   # Each cache entry consumes 48 bytes on shared memory.
                                   # Defaults to 1,000,000(45.8MB).
                                   # (change requires restart)
memqcache_expire = {{ pgpool_memqcache_expire }}
                                   # Memory cache entry life time specified in seconds.
                                   # 0 means infinite life time. 0 by default.
                                   # (change requires restart)
memqcache_auto_cache_invalidation = {{ pgpool_memqcache_auto_cache_invalidation }}
                                   # If on, invalidation of query cache is triggered by corresponding
                                   # DDL/DML/DCL(and memqcache_expire).  If off, it is only triggered
                                   # by memqcache_expire.  on by default.
                                   # (change requires restart)
memqcache_maxcache = {{ pgpool_memqcache_maxcache }}
                                   # Maximum SELECT result size in bytes.
                                   # Must be smaller than memqcache_cache_block_size. Defaults to 400KB.
                                   # (change requires restart)
memqcache_cache_block_size = {{ pgpool_memqcache_cache_block_size }}
                                   # Cache block size in bytes. Mandatory if memqcache_method = 'shmem'.
                                   # Defaults to 1MB.
                                   # (change requires restart)
memqcache_oiddir = '{{ pgpool_memqcache_oiddir }}'
                                   # Temporary work directory to record table oids
                                   # (change requires restart)
